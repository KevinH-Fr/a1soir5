<div class="container-fluid bg-light p-2"> 
  <h2 class="text-dark  text-center"> SCANNER LE QR CODE </h2>
  <hr>

  <div class="text-center">
    <video id="video" width="300" height="200" style="border: 1px solid gray"></video>
  </div>

  <hr>
  <div id="sourceSelectPanel">
    <label for="sourceSelect">Choisir la source:</label>
    <select id="sourceSelect" style="max-width:400px">
    </select>
  </div>
  
  <div id="count">  </div> <br>
  <div id="results">  </div>

  <a class="button btn btn-primary" id="startButton">Démarrer</a>
  <a class="button btn btn-danger" id="resetButton" style="display: none;">Arrêter</a>

  <div id="buttons-next" style="display: none;">
    <a class="btn btn-primary" id="otherScanButton">Scanner autre QR</a> 
    <a class="btn btn-success" id="validateButton">Valider</a>
  </div>
</div>

<script type="text/javascript" src="https://unpkg.com/@zxing/library@latest"></script>
<script type="text/javascript">

  function decodeOnce(codeReader, selectedDeviceId) {
    codeReader.decodeFromInputVideoDevice(selectedDeviceId, 'video').then((result) => {
    const resultsDiv = document.getElementById('results');

    if (result) {
      console.log('Found QR code!', result)  // properly decoded qr code
      // transforme value
      let  resultTransforme = result.toString().split('produits/')[1];
      let  resultTransforme2 = resultTransforme.split('?')[0];
      const resultElement = document.createElement('p');
      resultElement.textContent = resultTransforme2;
      document.getElementById('results').appendChild(resultElement);

      // update the count 
      const numResults = resultsDiv.childElementCount;
      const countElement = document.getElementById('count');
      countElement.textContent = `Nombre de produits: ${numResults}`;
    
      codeReader.stopStreams();   // stop camera

      // show btns autre scan et valider et reset
      var btnsDiv = document.getElementById("buttons-next");
      btnsDiv.style.display = "inline";

      var btnStart = document.getElementById("startButton");
      btnStart.style.display = "none";

      var btnReset = document.getElementById("resetButton");
      btnReset.style.display = "inline";

      }
    })
  }

  window.addEventListener('load', function () {
    let selectedDeviceId;
    const codeReader = new ZXing.BrowserQRCodeReader()
    console.log('ZXing code reader initialized')

    codeReader.getVideoInputDevices()
      .then((videoInputDevices) => {
        const sourceSelect = document.getElementById('sourceSelect')
        selectedDeviceId = videoInputDevices[0].deviceId
        if (videoInputDevices.length >= 1) {
          videoInputDevices.forEach((element) => {
            const sourceOption = document.createElement('option')
            sourceOption.text = element.label
            sourceOption.value = element.deviceId
            sourceSelect.appendChild(sourceOption)
          })

          sourceSelect.onchange = () => {
            selectedDeviceId = sourceSelect.value;
          };

          const sourceSelectPanel = document.getElementById('sourceSelectPanel')
          sourceSelectPanel.style.display = 'inline'
        }

        document.getElementById('startButton').addEventListener('click', () => {
          decodeOnce(codeReader, selectedDeviceId);
          console.log(`Started decode from camera with id ${selectedDeviceId}`)
          var btnReset = document.getElementById("resetButton");
          btnReset.style.display = "inline";
        })

        document.getElementById('otherScanButton').addEventListener('click', () => {
          decodeOnce(codeReader, selectedDeviceId);
          console.log(`Continued decode from camera with id ${selectedDeviceId}`)
        })

        document.getElementById('resetButton').addEventListener('click', () => {
          codeReader.reset()
          resultsDiv.textContent = "";
          console.log('Reset.')
        })

        document.getElementById('validateButton').addEventListener('click', () => {
          const resultsDiv = document.getElementById('results');
          const pElements = resultsDiv.getElementsByTagName('p');
          const values = [];
          for (let i = 0; i < pElements.length; i++) {
            const value = parseInt(pElements[i].textContent);
            values.push(value);
          }
        
          const commandeId = <%= @commandeId.to_json.html_safe %>;
          const articleId = <%= @articleId.to_json.html_safe %>;  // passer l'id article si existe 
          const rootPath = window.location.origin;
          const baseUrl = "/new_multiple?commandeId=" + commandeId + "&";

          // si articleid present, nouveau sous article, sinon nouveau article
          if (articleId > 0) { // nouvel article
            var pageUrl =  "/sousarticles"  + baseUrl + "&articleId=" + articleId + "&";
          } else { // nouveau sous article
            var pageUrl = "/articles"  + baseUrl 
          }

          
          const produits_ids = `${values.map(id => `produits_ids[]=${id}`).join('&')}`;
          const numberOfElements = "&nbElements=" + values.length;
          const fullPath = rootPath + pageUrl + produits_ids + numberOfElements;

          console.log("url: " + fullPath + "nb: " + numberOfElements);
          window.location.assign(fullPath);
        });
      })

      .catch((err) => {
        console.error(err)
      })
  })
</script>
