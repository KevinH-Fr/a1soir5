

<body>

  <main class="wrapper" style="padding-top:2em">

    <section class="container" id="demo-content">
      <h1 class="title text-dark">Scan QR Code from Video Camera</h1>

      <hr>

      <div class="text-center">
        <video id="video" width="300" height="200" style="border: 1px solid gray"></video>
      </div>

      <div id="sourceSelectPanel" style="display:none">
        <label for="sourceSelect">Change video source:</label>
        <select id="sourceSelect" style="max-width:400px">
        </select>
      </div>

      <hr>

      <div id="count">
      </div>
    
      <div id="results"></div>

      <a class="button btn btn-primary" id="startButton">Start</a>
      <a class="button btn btn-danger" id="resetButton" style="display: none;">Reset</a>

      <div id="buttons-next" style="display: none;">
        <a class="btn btn-primary" id="otherScanButton">Scanner autre QR</a> 
        <a class="btn btn-success" id="validateButton">Valider</a>
      </div>

    </section>

  </main>

  <div>test link multiple</div>

  <% produitsIds = [38, 39]%>

  <%= link_to "New multiple articles", new_multiple_articles_path(produits_ids: produitsIds), class:"btn btn-success" %>



  <script type="text/javascript" src="https://unpkg.com/@zxing/library@latest"></script>
  <script type="text/javascript">

    function decodeOnce(codeReader, selectedDeviceId) {
      codeReader.decodeFromInputVideoDevice(selectedDeviceId, 'video').then((result) => {
      
      const resultsDiv = document.getElementById('results');

      if (result) {
          // properly decoded qr code
          console.log('Found QR code!', result)

          // extract value from URL
          let  resultTransforme = result.toString().split('produits/')[1];
          //console.log('resultTransforme: ', resultTransforme)
          let  resultTransforme2 = resultTransforme.split('?')[0];
          //console.log('resultTransforme2: ', resultTransforme2)
        
          const resultElement = document.createElement('p');
          
          resultElement.textContent = resultTransforme2;
          document.getElementById('results').appendChild(resultElement);

        // update the count of child elements in the results div
          const numResults = resultsDiv.childElementCount;

          // display the count on the HTML page
          const countElement = document.getElementById('count');
          countElement.textContent = `Number of results: ${numResults}`;

          // stop camera
          codeReader.stopStreams();

          // show btns autre scan et valider et reset
          var btnsDiv = document.getElementById("buttons-next");
          btnsDiv.style.display = "block";

          var btnStart = document.getElementById("startButton");
          btnStart.style.display = "none";

          var btnReset = document.getElementById("resetButton");
          btnReset.style.display = "inline";

          

        }
      })
    }

    window.addEventListener('load', function () {
      let selectedDeviceId;
      const codeReader = new ZXing.BrowserQRCodeReader()
      console.log('ZXing code reader initialized')

      codeReader.getVideoInputDevices()
        .then((videoInputDevices) => {
          const sourceSelect = document.getElementById('sourceSelect')
          selectedDeviceId = videoInputDevices[0].deviceId
          if (videoInputDevices.length >= 1) {
            videoInputDevices.forEach((element) => {
              const sourceOption = document.createElement('option')
              sourceOption.text = element.label
              sourceOption.value = element.deviceId
              sourceSelect.appendChild(sourceOption)
            })

            sourceSelect.onchange = () => {
              selectedDeviceId = sourceSelect.value;
            };

            const sourceSelectPanel = document.getElementById('sourceSelectPanel')
            sourceSelectPanel.style.display = 'block'
          }

          document.getElementById('startButton').addEventListener('click', () => {
            decodeOnce(codeReader, selectedDeviceId);
            console.log(`Started decode from camera with id ${selectedDeviceId}`)

            var btnReset = document.getElementById("resetButton");
            btnReset.style.display = "inline";

          })

          document.getElementById('otherScanButton').addEventListener('click', () => {
            decodeOnce(codeReader, selectedDeviceId);
            console.log(`Continued decode from camera with id ${selectedDeviceId}`)
          })

          document.getElementById('resetButton').addEventListener('click', () => {
            codeReader.reset()
            document.getElementById('result').textContent = '';
            console.log('Reset.')
          })

          /*  reprendre ici et ajouter un consol log sur 
              btn valider y passer les ids produits
          */

          document.getElementById('validateButton').addEventListener('click', () => {
           // console.log('click btn validate.')
            const resultsDiv = document.getElementById("results"); // Get the <div> element
            //console.log("ids: " + resultsDiv.textContent)

             const resultElements = resultsDiv.querySelectorAll('p'); // Get all the <p> elements within the <div> element

            resultElements.forEach((resultElement) => { // Loop through the <p> elements
              //console.log(resultElement.textContent); // Log the text content of each <p> element to the console
          
            const resultTextArray = Array.from(resultElements).map((resultElement) => resultElement.textContent); // Convert the NodeList of <p> elements to an array of their text content using the map() method
              console.log(resultTextArray); // Log the array of text content to the console
            });

            // redirection vers page new multiple avec params



          })

        })
        .catch((err) => {
          console.error(err)
        })
    })
  </script>

</body>